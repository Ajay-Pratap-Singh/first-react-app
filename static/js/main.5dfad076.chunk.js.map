{"version":3,"sources":["hooks/useAuth.js","components/SignInScreen.js","components/Navbar.js","components/AuthorInfo.js","components/Comments.js","components/Vote.js","components/Share.js","components/Views.js","components/Report.js","components/ActionBar.js","components/EntityHeader.js","components/Entity.js","components/Categories/Category.js","components/Categories/index.js","components/AskQuestion.js","components/Home.js","components/Suggestions/Category.js","components/Suggestions/index.js","components/Editor.js","components/WriteAnswer.js","components/QuestionPage.js","App.js","serviceWorker.js","index.js","components/userThumb.jpeg"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authContext","createContext","ProvideAuth","children","auth","useState","user","setUser","signinFormActive","setSigninFormActive","useEffect","unsubscribe","onAuthStateChanged","signout","signOut","then","useProvideAuth","Provider","value","SignInScreen","useContext","handleClose","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","Dropdown","onClick","Toggle","as","id","Image","className","src","photoURL","userThumb","roundedCircle","style","width","cursor","Menu","Header","displayName","Divider","Item","Modal","centered","show","onHide","closeButton","Title","Body","firebaseAuth","Footer","Button","variant","NavBar","Navbar","bg","expand","Brand","href","aria-controls","Collapse","Nav","Link","Form","inline","FormControl","type","placeholder","AuthorInfo","props","imgSize","min","Row","lineHeight","noGutters","Col","xs","Badge","size","md","CommentIcon","InputGroup","Prepend","title","readOnly","disabled","aria-label","aria-describedby","count","CommentInput","comment","setComment","comments","setComments","onSubmit","e","preventDefault","target","reset","setOpenCommentInput","setTimeout","body","Label","htmlFor","srOnly","Control","onChange","maxWiddth","CommentSection","a","length","axios","get","data","commentCount","Card","fontSize","Container","ListGroup","map","obj","key","Vote","VoteContext","voted","setVoted","downvotes","downvoteCount","setDownvoteCount","upvotes","upvoteCount","setUpvoteCount","clicked","setClicked","voteHandler","upvote","Spinner","animation","role","Share","setShow","EmailShareButton","url","subject","EmailIcon","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","PinterestShareButton","PinterestIcon","RedditShareButton","RedditIcon","TumblrShareButton","TumblrIcon","TwitterShareButton","TwitterIcon","Views","Report","alert","ActionBar","views","vote","setOpenComments","openComments","share","report","EntityHeader","author","color","to","eid","Entity","expanded","setExpanded","bodyContent","useRef","voteValue","firstImg","ref","maxHeight","overflow","textAlign","visibility","console","log","parentType","parentId","Category","open","setOpen","following","follow","setFollow","onMouseEnter","onMouseLeave","name","Fade","in","aria-expanded","CategoriesPanel","categories","setCategories","minWidth","AskQuestion","loading","setLoading","question","setQuestion","backdrop","keyboard","Group","controlId","rows","Text","muted","Home","fluid","Categories","posts","userId","rel","alt","height","Editor","editor","content","setContent","config","showWordsCounter","showXPathInStatusbar","uploader","insertImageAsBase64URI","buttons","toolbarAdaptive","useMemo","WriteAnswer","answer","setAnswer","enforceFocus","questionTitle","img","document","createElement","innerHTML","querySelector","Math","random","setAnswers","concat","answers","QuestionPage","ReactHtmlParser","outerHTML","Suggestions","App","setPosts","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5dfad076.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBHCFpqUji6J7UTsEepwl2ez0y2UUSDBXk\",\r\n    authDomain: \"ringed-magpie-285413.firebaseapp.com\",\r\n    databaseURL: \"https://ringed-magpie-285413.firebaseio.com\",\r\n    projectId: \"ringed-magpie-285413\",\r\n    storageBucket: \"ringed-magpie-285413.appspot.com\",\r\n    messagingSenderId: \"909033433276\",\r\n    appId: \"1:909033433276:web:7c648e23c9ef94eba008b9\",\r\n    measurementId: \"G-Y8JJMBV190\"\r\n});\r\n\r\nconst authContext = createContext();\r\n\r\nexport function ProvideAuth({ children }) {\r\n    const auth = useProvideAuth();\r\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\nexport const useAuth = () => {\r\n    return useContext(authContext);\r\n};\r\n\r\n// Provider hook that creates auth object and handles state\r\nfunction useProvideAuth() {\r\n    const [user, setUser] = useState(null);\r\n    const [signinFormActive, setSigninFormActive] = useState(false);\r\n\r\n    const signout = () => {\r\n        return firebase.auth().signOut().then(() => {\r\n            setUser(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n            if (user)\r\n                setUser(user);\r\n            else \r\n                setUser(false);\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n  \r\n    return {\r\n        user,\r\n        signout,\r\n        signinFormActive,\r\n        setSigninFormActive\r\n    };\r\n}","import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\nimport userThumb from './userThumb.jpeg'\r\nimport {Button,Modal,Image,Dropdown} from 'react-bootstrap';\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n\r\nfunction SignInScreen() {\r\n    const auth=useAuth();\r\n\r\n    const handleClose = () => auth.setSigninFormActive(false);\r\n    const handleShow = () => auth.setSigninFormActive(true);\r\n\r\n    // Configure FirebaseUI.\r\n    const uiConfig = {\r\n        signInFlow: 'popup',\r\n        signInOptions: [\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccessWithAuthResult: () => false\r\n        }\r\n    };\r\n\r\n    const imgSize={width:\"36px\",cursor:\"pointer\"}\r\n\r\n    return (\r\n    <>\r\n    <Dropdown onClick={auth.user || auth.signinFormActive?null:handleShow}>\r\n        <Dropdown.Toggle as=\"div\" id=\"dropdown-basic\">\r\n            <Image className=\"m-1\" src={auth.user ? auth.user.photoURL ? auth.user.photoURL : userThumb: userThumb} roundedCircle style={imgSize}/>\r\n        </Dropdown.Toggle>\r\n        {auth.user?\r\n            <Dropdown.Menu className=\"dropdown-menu-right\">\r\n                <Dropdown.Header>Hello <strong>{auth.user.displayName}!</strong></Dropdown.Header>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item onClick={auth.signout}>Logout</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        :\r\n            <Modal\r\n                centered\r\n                show={auth.signinFormActive}\r\n                onHide={handleClose}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Authenticate</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"px-4\">\r\n                    <p>Please sign-in:</p>\r\n                    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        }\r\n    </Dropdown>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default SignInScreen;","import React from 'react';\r\nimport { FaGlobe,FaBell ,FaIdBadge } from \"react-icons/fa\";\r\nimport {Navbar, Form, Nav, FormControl, Button} from 'react-bootstrap';\r\nimport SignIn from './SignInScreen';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">Qusol-Image</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-4 mr-auto\">\r\n            <Nav.Link href=\"#home\">Trending</Nav.Link>\r\n            <Nav.Link href=\"#article\">Article</Nav.Link>\r\n            <Nav.Link href=\"#answer\">Answer</Nav.Link>\r\n            <Nav.Link href=\"#blogs\">Blog</Nav.Link>\r\n            <Nav.Link href=\"#poll\">Poll</Nav.Link>\r\n            {/*<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown> */}\r\n            </Nav>\r\n            <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n              <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n            <Nav className=\"ml-5 mr-4\">\r\n              <Nav.Link href=\"#globe\"><FaGlobe/></Nav.Link>\r\n              <Nav.Link href=\"#notifications\"><FaBell/></Nav.Link>\r\n              <Nav.Link href=\"#badges\"><FaIdBadge/></Nav.Link>\r\n              <SignIn/>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport userThumb from './userThumb.jpeg'\r\nimport {Badge,Col,Row,Image} from 'react-bootstrap';\r\n\r\nconst AuthorInfo = (props) => {\r\n    const imgSize={width:props.min?\"36px\":\"72px\"}\r\n    return  (\r\n        <Row className=\"my-1 pt-2 pb-0\" style={{lineHeight:\"1.2\"}} noGutters> \r\n            <Col xs={\"auto\"} className=\"mr-1 text-center\">\r\n                <Image className=\"mt-md-0 my-2\" src={userThumb} roundedCircle style={imgSize}/>\r\n            </Col>\r\n            <Col>\r\n                <Col>\r\n                    <p className=\"pr-0 m-0\">\r\n                        <strong>\r\n                            Abhishek Parashar Maheshwari\r\n                        </strong>\r\n                        {props.min?null:<span className=\"text-muted d-none d-md-inline ml-1\" >\r\n                            · last updated Jul 23\r\n                        </span>}\r\n                    </p>\r\n                    {props.min?null:<span className=\"text-muted\" style={{lineHeight:\"1\"}}>(@para-abhi) <Badge size=\"sm\" variant=\"warning\">Noobie</Badge></span>}\r\n                    {props.min?null:<p className=\"my-1\">\r\n                        I love to draw and love. I repeat, I love to draw and love.\r\n                    </p>}\r\n                </Col>\r\n                <Col className={props.min?\"pl-3\":\"d-md-none pl-md-1\"} md=\"auto\">\r\n                    <span className=\"text-muted\">\r\n                        last updated Jul 23\r\n                    </span>\r\n                </Col>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default AuthorInfo;","import React,{useState,useEffect} from 'react';\r\nimport Entity from './Entity';\r\nimport {FaComment} from 'react-icons/fa';\r\nimport {Button,Card,ListGroup,InputGroup,Form,FormControl,Col,Row, Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction CommentIcon(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Comment\"\r\n                    className=\"pt-0\" id=\"basic-addon1\"\r\n                    variant=\"secondary\"\r\n                    onClick={props.onClick}\r\n                >\r\n                    <FaComment size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Comments\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}\r\n\r\nfunction CommentInput(props){\r\n    const [comment,setComment]=useState(\"\");\r\n    const comments=props.comments;\r\n    const setComments=props.setComments;\r\n    const postComment=(e)=>{\r\n        e.preventDefault();\r\n        e.target.reset();\r\n        props.setOpenCommentInput(false);\r\n        setTimeout(()=>{\r\n            if(comment!=='')\r\n            setComments([{body:comment},...comments])\r\n        },50)\r\n    }\r\n    return (\r\n        <Form onSubmit={postComment} className=\"mt-3 w-100\" inline>\r\n            <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\r\n                Comment\r\n            </Form.Label>\r\n            <Form.Control\r\n                onChange={(e)=>{setComment(e.target.value)}}\r\n                style={{width:\"calc( 98% - 75px )\"}}\r\n                className=\"mr-2 mb-2\"\r\n                size=\"sm\"\r\n                placeholder=\"Enter comment\"\r\n            />\r\n            <Button size=\"sm\" type=\"submit\" className=\"mb-2\" style={{maxWiddth:\"70px\"}}>\r\n                Comment\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction CommentSection(props) {\r\n    const comments =props.comments;\r\n    const setComments =props.setComments;\r\n\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            if(comments.length<2){\r\n                setComments([...comments,...(await axios.get('https://jsonplaceholder.typicode.com/comments?_limit=4')).data]);\r\n            }\r\n        })()    \r\n    },[comments,setComments])\r\n\r\n    if(!props.commentCount)\r\n        return null;\r\n\r\n    return (\r\n        <Card.Footer style={{fontSize:\"0.9rem\"}} className=\"p-0 pl-3\">\r\n            <Container>\r\n                <Row>\r\n                    <ListGroup id=\"comment-sec\" variant=\"flush\" className=\"border-left\">\r\n                        {comments.map((obj,key)=>\r\n                            <ListGroup.Item key={key} className=\"p-0 border-0\">\r\n                                <Entity\r\n                                    bg=\"light\" \r\n                                    className=\"w-100 border-bottom-0 border-left-0 border-right-0 rounded-0\"\r\n                                    type=\"comment\" \r\n                                    body={obj.body}\r\n                                />\r\n                            </ListGroup.Item>)\r\n                        }\r\n                    </ListGroup>\r\n                </Row>\r\n            </Container>\r\n        </Card.Footer>\r\n    );\r\n}\r\n\r\nexport {CommentIcon, CommentInput, CommentSection};","import React,{useState, useContext} from 'react';\r\nimport {FaThumbsDown,FaThumbsUp} from 'react-icons/fa';\r\nimport {Button,Col,InputGroup,FormControl,Spinner} from 'react-bootstrap';\r\nimport {VoteContext} from './Entity';\r\n\r\n\r\nexport default function Vote(props){\r\n    const {voted,setVoted} = useContext(VoteContext);\r\n    const [downvoteCount,setDownvoteCount] = useState(props.downvotes);\r\n    const [upvoteCount,setUpvoteCount] = useState(props.upvotes);\r\n    const [clicked,setClicked] = useState(null);\r\n    const voteHandler = (upvote) => {\r\n        setClicked(upvote);\r\n        if(voted===null){\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                upvote?setUpvoteCount(upvoteCount+1):setDownvoteCount(downvoteCount+1);\r\n                setClicked(null);\r\n            },500)\r\n        }else if(voted===upvote){\r\n            setTimeout(()=>{\r\n                setVoted(null);\r\n                upvote?setUpvoteCount(upvoteCount-1):setDownvoteCount(downvoteCount-1);\r\n                setClicked(null);\r\n            },500)\r\n        }else{\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                if(upvote){\r\n                    setUpvoteCount(upvoteCount+1);\r\n                    setDownvoteCount(downvoteCount-1);\r\n                }else{\r\n                    setUpvoteCount(upvoteCount-1);\r\n                    setDownvoteCount(downvoteCount+1);\r\n                }\r\n                setClicked(null);\r\n            },500)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button\r\n                        title=\"Like\" \r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===true ? \"primary\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(true)}}\r\n                    >\r\n                        {clicked===true?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsUp size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Likes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Likes\"\r\n                    aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={upvoteCount}\r\n                />\r\n            </InputGroup>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button \r\n                        title=\"Dislike\"\r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===false ? \"danger\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(false)}}\r\n                    >\r\n                        {clicked===false?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsDown size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Dislikes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Dislikes\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={downvoteCount}\r\n                />\r\n            </InputGroup>\r\n        </>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport {FaShareAlt} from 'react-icons/fa';\r\nimport {Button,Modal,Container,Row,Col} from 'react-bootstrap';\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    WhatsappShareButton,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    PinterestIcon,\r\n    RedditIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    WhatsappIcon\r\n  } from \"react-share\";\r\n\r\nexport default function Share(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button title=\"Share\" variant=\"secondary\" onClick={handleShow} size=\"sm\" className=\"mr-1 pt-0\">\r\n                <FaShareAlt size=\"1em\"/>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Share</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Share via:\r\n                    <Container className=\"p-3\">\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <EmailShareButton url={props.url} subject={props.title} body={\"Qusol\"}><EmailIcon round/></EmailShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <FacebookShareButton url={props.url} quote={props.title}><FacebookIcon round/></FacebookShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <LinkedinShareButton url={props.url}><LinkedinIcon round/></LinkedinShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <WhatsappShareButton  url={props.url} title={props.title}><WhatsappIcon round/></WhatsappShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <PinterestShareButton url={props.url} title={props.title}><PinterestIcon round/></PinterestShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <RedditShareButton url={props.url} title={props.title}><RedditIcon round/></RedditShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TumblrShareButton  url={props.url} title={props.title}><TumblrIcon round/></TumblrShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TwitterShareButton url={props.url} title={props.title}><TwitterIcon round/></TwitterShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {FaRegEye} from 'react-icons/fa';\r\nimport {Button,InputGroup,FormControl,Col} from 'react-bootstrap';\r\n\r\nexport default function Views(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" as={Col} size=\"sm\">\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Views\"\r\n                    className=\"pt-0\" id=\"basic-addon1\" \r\n                    disabled\r\n                    variant=\"secondary\"\r\n                >\r\n                    <FaRegEye size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Views\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}","import React from 'react';\r\nimport {FaExclamation} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport default function Report() {\r\n    return (\r\n        <Button title=\"Report\" variant=\"secondary\" onClick={()=>{alert(\"Report Clicked!!\")}} size=\"sm\" className=\"pt-0\">\r\n            <FaExclamation size=\"1em\"/>\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Col,Row} from 'react-bootstrap';\r\nimport Vote from './Vote';\r\nimport Share from './Share';\r\nimport Views from './Views';\r\nimport {CommentIcon} from './Comments';\r\nimport Report from './Report';\r\n\r\nexport default function ActionBar(props){\r\n    return (\r\n        <Row className=\"mt-4 justify-content-between flex-nowrap\" noGutters>\r\n            <Col md={9}>\r\n                <Row noGutters>\r\n                    {props.views?<Views count=\"2393\"/>:null}\r\n                    {props.vote?<Vote downvotes={231} upvotes={789}/>:null}\r\n                    {props.comment?<CommentIcon count={290} onClick={()=>{props.setOpenComments(!props.openComments)}}/>:null}\r\n                </Row>\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n                <Row className=\"justify-content-end flex-nowrap h-100\" noGutters>\r\n                    {props.share?<Share title={\"Element Title\"} url={\"https://element.url.om/elimentId\"}/>:null}\r\n                    {props.report?<Report/>:null}\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Card} from 'react-bootstrap';\r\nimport AuthorInfo from './AuthorInfo';\r\n\r\nconst EntityHeader = (props) => {\r\n    return  (\r\n        <>\r\n            {props.min?null:<AuthorInfo min author={props.author}/>}\r\n            <Link style={{color:\"black\"}} to={`${props.type}/${props.eid}`}><Card.Title>{props.title}</Card.Title></Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntityHeader;","import React, { useState, createContext, useRef } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport {CommentSection,CommentInput} from './Comments';\r\nimport ActionBar from './ActionBar';\r\nimport EntityHeader from './EntityHeader';\r\n\r\nconst VoteContext=createContext({\r\n    voted:null,\r\n    setVoted:()=>{}\r\n});\r\n\r\nconst Entity = (props) => {\r\n    const [openComments, setOpenComments] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const bodyContent = useRef(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [voted,setVoted]=useState(null);//use props false(dislike)  null(not-voted)  true(like)\r\n    const voteValue={voted,setVoted};\r\n    return  (\r\n        <Card bg={props.bg} className={props.className||\"mb-3\"} style={{width:\"100%\"}}>\r\n            <Card.Body className=\"p-2 p-sm-3\">\r\n                {props.type!==\"comment\"?<EntityHeader min type={props.type} eid={props.id} title={props.title}/>:null}\r\n                <AuthorInfo min={props.type==='comment'}/>\r\n                {expanded?null:(props.firstImg)}\r\n                <div ref={bodyContent} style={{maxHeight:expanded?\"none\":\"11ch\",overflow:\"hidden\"}}>\r\n                    {props.body}\r\n                    {props.body}\r\n                    {props.body}\r\n                    {props.body}\r\n                    {props.body}\r\n                    {props.body}\r\n                    {props.body}\r\n                    {props.body}\r\n                </div>\r\n                <p style={{textAlign:\"right\", color:\"blue\",cursor:\"pointer\"}} onClick={(e)=>{\r\n                    setExpanded(true);\r\n                    e.target.style.visibility=\"hidden\"\r\n                    console.log(\"Show more clicked\",bodyContent)\r\n                    }}\r\n                >\r\n                    Show more\r\n                </p>\r\n                <VoteContext.Provider value={voteValue}>\r\n                    <ActionBar views={props.type!=='comment'} vote comment share={props.type!=='comment'} report setOpenComments={setOpenComments} openComments={openComments} />\r\n                </VoteContext.Provider>\r\n                {openComments?<CommentInput setOpenCommentInput={setOpenComments} comments={comments} \r\n                setComments={setComments}/>:null}\r\n            </Card.Body>\r\n            {openComments?<CommentSection comments={comments} setComments={setComments} parentType={props.type} parentId={props.id} commentCount={3}/>:null}\r\n        </Card>\r\n    )\r\n}\r\nexport {VoteContext};\r\nexport default Entity;","import React, { useState } from 'react';\r\nimport {ListGroup, Button,Fade} from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [follow, setFollow] = useState(props.following);\r\n    const toggleFollow=()=>{\r\n        setFollow(!follow); \r\n    }\r\n    return(\r\n        <ListGroup.Item\r\n            aria-controls=\"follow-button\"\r\n            onMouseEnter={() => setOpen(true)}\r\n            onMouseLeave={() => setOpen(false)}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <span>\r\n                {props.name}\r\n            </span>\r\n            <Fade in={open}>\r\n                <Button\r\n                    id=\"follow-button\"\r\n                    aria-expanded={open}\r\n                    onClick={toggleFollow}\r\n                    size=\"sm\"\r\n                    variant={follow?\"secondary\":\"primary\"}\r\n                >\r\n                    {follow?\"Unfollow\":\"Follow\"}\r\n                </Button>\r\n            </Fade>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Posts');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/users')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card style={{width:\"100%\",minWidth:\"271px\"}}>\r\n            <Card.Title className=\"pt-2 px-3\">Categories</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} name={obj.name} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React,{useState} from 'react';\r\nimport {Button,Modal,Form, Spinner} from 'react-bootstrap'\r\nimport AuthorInfo from './AuthorInfo';\r\n\r\nexport default function AskQuestion() {\r\n    const [show, setShow] = useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const [question,setQuestion]=useState({});\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button className=\"m-3\" variant=\"primary\" onClick={handleShow}>\r\n            Ask a Question\r\n        </Button>\r\n  \r\n        <Modal\r\n            centered\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Ask a Question</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"px-4\">\r\n                <AuthorInfo min/>\r\n                <Form>\r\n                    <Form.Group controlId=\"AskQuestionForm.ControlTextarea\">\r\n                        <Form.Label>Enter the question you want to ask:</Form.Label>\r\n                        <Form.Control \r\n                            placeholder=\"Enter your Question here\" as=\"textarea\" rows=\"3\"\r\n                            onChange={(e)=>{\r\n                                setQuestion({...question,title:e.target.value});\r\n                            }} />\r\n                        <Form.Text id=\"QuestionHelpBlock\" muted>\r\n                            Make sure the question you are going to ask is not already asked by someone else. We recommend searching before asking a new question.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick={()=>{\r\n                        setLoading(true);\r\n                        setTimeout(()=>{\r\n                            setLoading(false);\r\n                            handleClose()\r\n                        },500)\r\n                    }}\r\n                >\r\n                    Ask\r\n                    {loading?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:null}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}","import React from 'react';\r\nimport Entity from './Entity';\r\nimport CategoriesPanel from './Categories';\r\nimport AskQuestion from './AskQuestion';\r\nimport {Container,Col,Row,Card} from 'react-bootstrap';\r\n\r\nexport default function Home(props) {\r\n    // const [posts,setPosts]=useState([]);\r\n    // useEffect(()=>{\r\n    //     (async ()=>{\r\n    //       console.log('Fetching Posts');\r\n    //       setPosts((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\r\n    //     })()\r\n    // },[]);\r\n    return (\r\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\r\n          <Row>\r\n            <Col xs={\"auto\"} className=\"d-none d-lg-block p-0\">\r\n              <CategoriesPanel/>\r\n            </Col>\r\n            <Col className=\"p-0 px-sm-2 px-md-3\">\r\n              <Row>\r\n                <AskQuestion/>\r\n              </Row>\r\n              <Row>\r\n                {props.posts.map((obj)=><Entity key={obj.id} id={obj.id} type=\"question\" title={obj.title} body={obj.body} userId={obj.userId}/>)}\r\n              </Row>\r\n            </Col>\r\n            <Col xs={\"auto\"} className=\"d-none d-xl-block p-0\">\r\n              <CategoriesPanel/>\r\n              <Card>\r\n              <Card.Body>\r\n              <div className=\"d-flex flex-column align-items-center\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href='http://play.google.com/store/?pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png' height=\"100\"/></a>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://www.apple.com/ios/app-store/'><img alt='Get it on App Store' src='https://linkmaker.itunes.apple.com/images/badges/en-us/badge_appstore-lrg.svg' height=\"70\"/></a>\r\n              </div>\r\n              </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }","import React from 'react';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    return(\r\n        <ListGroup.Item\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <Link to={\"/question/\"+props.id}>\r\n                {props.name}\r\n            </Link>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Suggestions');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card style={{width:\"100%\",minWidth:\"271px\"}}>\r\n            <Card.Title className=\"pt-2 px-3\">Related Questions</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} id={obj.id} name={obj.title} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React, { useRef, useState, useMemo } from 'react'\r\nimport JoditEditor from \"jodit-react\";\r\n\r\nconst Editor = ({ value, onChange }) => {\r\n  const editor = useRef(null)\r\n  const [content, setContent] = useState(value)\r\n  const config = {\r\n    showWordsCounter: false,\r\n    showXPathInStatusbar: false,\r\n    uploader: { insertImageAsBase64URI: true },\r\n    buttons: \"bold,strikethrough,underline,italic,|,superscript,subscript,|,ul,ol,|,outdent,indent,|,paragraph,|,image,video,table,link,|,undo,redo,\\n,selectall,cut,copy,paste,|,hr,symbol,fullsize\",\r\n    toolbarAdaptive:false\r\n}\r\n\t\t\t\t\t\t\t\t\r\n  return useMemo(() => ( \r\n    <JoditEditor\r\n      ref={editor}\r\n      value={content}\r\n      config={config}\r\n      onChange={content => {\r\n        setContent(content)\r\n        onChange(content)\r\n      }}\r\n    /> \r\n  ), [])\r\n}\r\n\r\nexport default Editor","import React,{useState} from 'react';\r\nimport {Button,Modal,Form, Spinner} from 'react-bootstrap'\r\nimport AuthorInfo from './AuthorInfo';\r\nimport Editor from './Editor';\r\n\r\nexport default function WriteAnswer(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const [answer,setAnswer]=useState({});\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button className=\"m-3\" variant=\"primary\" onClick={handleShow}>\r\n            Write Answer\r\n        </Button>\r\n  \r\n        <Modal\r\n            centered\r\n            size=\"xl\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            enforceFocus={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Write Answer for: {props.questionTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"px-4\">\r\n                <AuthorInfo/>\r\n                <Form>\r\n                    <Form.Group controlId=\"AnswerForm.ControlTextarea\">\r\n                        <Form.Label>Enter your answer</Form.Label>\r\n                        <Editor \r\n                            value={''} \r\n                            onChange={content => {\r\n                                let img = document.createElement('div');\r\n                                img.innerHTML=content;\r\n                                img=img.querySelector('img');\r\n                                setAnswer({ ...answer,body:content, \r\n                                // firstImg:img \r\n                                })\r\n                            }}\r\n                        />\r\n                        <Form.Text id=\"QuestionHelpBlock\" muted>\r\n                            Make your submission awesome\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick={()=>{\r\n                        setLoading(true);\r\n                        setTimeout(()=>{\r\n                            handleClose();\r\n                            answer.id=Math.random()*1000+'';\r\n                            props.setAnswers([{...answer}].concat(props.answers));\r\n                            setLoading(false);\r\n                        },500)\r\n                    }}\r\n                >\r\n                    Submit Answer \r\n                    {loading?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:null}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport SuggestionsPanel from './Suggestions';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport Entity from './Entity';\r\nimport {Container,Col,Row} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport WriteAnswer from './WriteAnswer';\r\n\r\nexport default function QuestionPage(props) {\r\n    const [answers,setAnswers]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Answers');\r\n          setAnswers((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\r\n          <Row>\r\n            <Col className=\"p-0 px-sm-2 px-md-3\">\r\n                <AuthorInfo min/>\r\n                <h3>Here comes our question</h3>\r\n                <p className=\"text-muted\">Some stuff about question<br/>Some more stuff about question</p>\r\n                <br/>\r\n                <WriteAnswer answers={answers} setAnswers={setAnswers}/>\r\n                <br/>\r\n                {answers.map((obj,key)=><Entity key={obj.id} id={obj.id} type=\"answer\" firstImg={ReactHtmlParser(obj.firstImg?obj.firstImg.outerHTML:null)} body={ReactHtmlParser(obj.body)} userId={obj.userId}/>)}\r\n            </Col>\r\n            <Col xs={4} className=\"d-none d-md-block p-0\">\r\n              <SuggestionsPanel/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n}","import React,{useState, useEffect} from 'react';\nimport { IconContext } from \"react-icons\";\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport axios from 'axios';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport QuestionPage from './components/QuestionPage';\nimport { ProvideAuth } from \"./hooks/useAuth\";\n\nfunction App() {\n  const [posts,setPosts]=useState([]);\n  useEffect(()=>{\n      (async ()=>{\n        console.log('Fetching Posts');\n        setPosts((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\n      })()\n  },[]);\n  return (\n    <ProvideAuth>\n      <Router>\n      <IconContext.Provider value={{ size:\"1.5em\"}}>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home posts={posts}/>\n            </Route>\n            <Route path=\"/question/:id\" exact>\n              <QuestionPage/>\n            </Route>\n          </Switch>\n        </div>\n      </IconContext.Provider>\n      </Router>\n    </ProvideAuth>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/userThumb.35d08c44.jpeg\";"],"sourceRoot":""}