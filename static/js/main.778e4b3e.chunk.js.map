{"version":3,"sources":["components/userThumb.jpeg","components/AuthorInfo.js","components/Comments.js","components/Vote.js","components/Share.js","components/Views.js","components/Report.js","components/ActionBar.js","components/Entity.js","components/Navbar.js","components/Categories/Category.js","components/Categories/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthorInfo","props","imgSize","width","min","Row","className","style","lineHeight","noGutters","Col","xs","Image","src","userThumb","roundedCircle","Badge","size","variant","md","CommentIcon","InputGroup","as","Prepend","Button","title","id","FormControl","readOnly","disabled","placeholder","aria-label","aria-describedby","value","count","CommentSection","useState","open","setOpen","comments","setComments","commentCount","showComments","a","length","console","log","parentId","axios","get","data","Card","Footer","Container","onClick","aria-controls","aria-expanded","parentType","Collapse","in","ListGroup","map","obj","key","Item","bg","type","body","Vote","useContext","VoteContext","voted","setVoted","downvotes","downvoteCount","setDownvoteCount","upvotes","upvoteCount","setUpvoteCount","clicked","setClicked","voteHandler","upvote","setTimeout","Spinner","animation","role","Share","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","EmailShareButton","url","subject","EmailIcon","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","PinterestShareButton","PinterestIcon","RedditShareButton","RedditIcon","TumblrShareButton","TumblrIcon","TwitterShareButton","TwitterIcon","Views","Report","alert","ActionBar","views","vote","comment","share","report","createContext","Entity","voteValue","maxWidth","Provider","NavBar","Navbar","expand","Brand","href","Toggle","Nav","Link","Form","inline","Category","following","follow","setFollow","onMouseEnter","onMouseLeave","name","Fade","CategoriesPanel","categories","setCategories","useEffect","minWidth","App","posts","setPosts","fluid","Categories","userId","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,wC,iPCmC5BC,EA/BI,SAACC,GAChB,IAAMC,EAAQ,CAACC,MAAMF,EAAMG,IAAI,OAAO,QACtC,OACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,iBAAiBC,MAAO,CAACC,WAAW,OAAQC,WAAS,GAChE,kBAACC,EAAA,EAAD,CAAKC,GAAI,OAAQL,UAAU,oBACvB,kBAACM,EAAA,EAAD,CAAON,UAAU,eAAeO,IAAKC,IAAWC,eAAa,EAACR,MAAOL,KAEzE,kBAACQ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,KACI,uBAAGJ,UAAU,YACT,gEAGCL,EAAMG,IAAI,KAAK,0BAAME,UAAU,sCAAhB,6BAInBL,EAAMG,IAAI,KAAK,0BAAME,UAAU,aAAaC,MAAO,CAACC,WAAW,MAAhD,gBAAmE,kBAACQ,EAAA,EAAD,CAAOC,KAAK,KAAKC,QAAQ,WAAzB,WAClFjB,EAAMG,IAAI,KAAK,uBAAGE,UAAU,QAAb,gEAIpB,kBAACI,EAAA,EAAD,CAAKJ,UAAWL,EAAMG,IAAI,OAAO,oBAAqBe,GAAG,QACrD,0BAAMb,UAAU,cAAhB,2B,6ECrBpB,SAASc,EAAYnB,GACjB,OACI,kBAACoB,EAAA,EAAD,CAAYf,UAAU,OAAOW,KAAK,KAAKK,GAAIZ,KACvC,kBAACW,EAAA,EAAWE,QAAZ,KACI,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNnB,UAAU,OAAOoB,GAAG,eACpBR,QAAQ,aAER,kBAAC,IAAD,CAAWD,KAAK,UAGxB,kBAACU,EAAA,EAAD,CACIF,MAAM,WACNG,UAAQ,EACRC,UAAQ,EACRC,YAAY,WACZC,aAAW,WACXC,mBAAiB,eACjBC,MAAOhC,EAAMiC,SAM7B,SAASC,EAAelC,GAAQ,IAAD,EACHmC,oBAAS,GADN,mBACpBC,EADoB,KACdC,EADc,OAEKF,mBAAS,IAFd,mBAEpBG,EAFoB,KAEVC,EAFU,KAG3B,IAAIvC,EAAMwC,aACN,OAAO,KACX,IAAMC,EAAY,uCAAG,sBAAAC,EAAA,yDACjBL,GAASD,GACY,IAAlBE,EAASK,OAFK,uBAGbC,QAAQC,IAAI,wBAAwB7C,EAAM8C,UAH7B,KAIbP,EAJa,SAIMQ,IAAMC,IAAI,0DAJhB,mBAI2EC,MAJ3E,yDAAH,qDAOlB,OACI,kBAACC,EAAA,EAAKC,OAAN,CAAa9C,UAAU,YACnB,kBAAC+C,EAAA,EAAD,KACI,kBAAChD,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,KACI,8BAEJ,kBAACc,EAAA,EAAD,CAAQP,KAAK,KAAKX,UAAU,eAAeY,QAAQ,OAC/CoC,QAASZ,EAETa,gBAAc,cACdC,gBAAenB,GAEK,YAAnBpC,EAAMwD,WAAN,eAAqCxD,EAAMwC,aAA3C,aAAmE,iBACnEJ,EAAK,kBAAC,IAAD,CAAWpB,KAAK,QAAQ,kBAAC,IAAD,CAAaA,KAAK,SAEpD,kBAACP,EAAA,EAAD,KACI,+BAGR,kBAACL,EAAA,EAAD,KACI,kBAACqD,EAAA,EAAD,CAAUC,GAAItB,GACV,kBAACuB,EAAA,EAAD,CAAWlC,GAAG,cAAcR,QAAQ,QAAQZ,UAAU,eACjDiC,EAASsB,KAAI,SAACC,EAAIC,GAAL,OACV,kBAACH,EAAA,EAAUI,KAAX,CAAgBD,IAAKA,EAAKzD,UAAU,gBAChC,kBAAC,GAAD,CACI2D,GAAG,QACH3D,UAAU,+DACV4D,KAAK,UACLC,KAAML,EAAIK,gB,aClEnC,SAASC,EAAKnE,GAAO,IAAD,EACNoE,qBAAWC,IAA7BC,EADwB,EACxBA,MAAMC,EADkB,EAClBA,SADkB,EAEUpC,mBAASnC,EAAMwE,WAFzB,mBAExBC,EAFwB,KAEVC,EAFU,OAGMvC,mBAASnC,EAAM2E,SAHrB,mBAGxBC,EAHwB,KAGZC,EAHY,OAIF1C,mBAAS,MAJP,mBAIxB2C,EAJwB,KAIhBC,EAJgB,KAKzBC,EAAc,SAACC,GACjBF,EAAWE,GACA,OAARX,EACCY,YAAW,WACPX,EAASU,GACTA,EAAOJ,EAAeD,EAAY,GAAGF,EAAiBD,EAAc,GACpEM,EAAW,QACb,KACGT,IAAQW,EACbC,YAAW,WACPX,EAAS,MACTU,EAAOJ,EAAeD,EAAY,GAAGF,EAAiBD,EAAc,GACpEM,EAAW,QACb,KAEFG,YAAW,WACPX,EAASU,GACNA,GACCJ,EAAeD,EAAY,GAC3BF,EAAiBD,EAAc,KAE/BI,EAAeD,EAAY,GAC3BF,EAAiBD,EAAc,IAEnCM,EAAW,QACb,MAGV,OACI,oCACI,kBAAC3D,EAAA,EAAD,CAAYf,UAAU,OAAOW,KAAK,KAAKK,GAAIZ,KACvC,kBAACW,EAAA,EAAWE,QAAZ,KACI,kBAACC,EAAA,EAAD,CACIC,MAAM,OACNnB,UAAU,OAAOoB,GAAG,eACpBG,SAAoB,OAAVkD,EACV7D,SAAiB,IAARqD,EAAe,UAAY,YACpCjB,QAAS,WAAK2B,GAAY,MAEf,IAAVF,EAAe,kBAACK,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASrE,KAAK,OAAO,kBAAC,IAAD,CAAYA,KAAK,UAG/F,kBAACU,EAAA,EAAD,CACIF,MAAM,QACNG,UAAQ,EACRC,UAAQ,EACRC,YAAY,QACZC,aAAW,WACXC,mBAAiB,eACjBC,MAAO4C,KAGf,kBAACxD,EAAA,EAAD,CAAYf,UAAU,OAAOW,KAAK,KAAKK,GAAIZ,KACvC,kBAACW,EAAA,EAAWE,QAAZ,KACI,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNnB,UAAU,OAAOoB,GAAG,eACpBG,SAAoB,OAAVkD,EACV7D,SAAiB,IAARqD,EAAgB,SAAW,YACpCjB,QAAS,WAAK2B,GAAY,MAEf,IAAVF,EAAgB,kBAACK,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASrE,KAAK,OAAO,kBAAC,IAAD,CAAcA,KAAK,UAGlG,kBAACU,EAAA,EAAD,CACIF,MAAM,WACNG,UAAQ,EACRC,UAAQ,EACRC,YAAY,WACZC,aAAW,WACXC,mBAAiB,eACjBC,MAAOyC,M,6JC3DZ,SAASa,EAAMtF,GAAQ,IAAD,EACTmC,oBAAS,GADA,mBAC1BoD,EAD0B,KACpBC,EADoB,KAG3BC,EAAc,kBAAMD,GAAQ,IAGlC,OACI,oCACI,kBAACjE,EAAA,EAAD,CAAQC,MAAM,QAAQP,QAAQ,YAAYoC,QAJ/B,kBAAMmC,GAAQ,IAIsCxE,KAAK,KAAKX,UAAU,aAC/E,kBAAC,IAAD,CAAYW,KAAK,SAGrB,kBAAC0E,EAAA,EAAD,CAAOH,KAAMA,EAAMI,OAAQF,GACvB,kBAACC,EAAA,EAAME,OAAP,CAAcC,aAAW,GACzB,kBAACH,EAAA,EAAMI,MAAP,eAEA,kBAACJ,EAAA,EAAMK,KAAP,kBAEI,kBAAC3C,EAAA,EAAD,CAAW/C,UAAU,OACjB,kBAACD,EAAA,EAAD,CAAKC,UAAU,QACX,kBAACI,EAAA,EAAD,KACI,kBAACuF,EAAA,EAAD,CAAkBC,IAAKjG,EAAMiG,IAAKC,QAASlG,EAAMwB,MAAO0C,KAAM,SAAS,kBAACiC,EAAA,EAAD,CAAWC,OAAK,MAE3F,kBAAC3F,EAAA,EAAD,KACI,kBAAC4F,EAAA,EAAD,CAAqBJ,IAAKjG,EAAMiG,IAAKK,MAAOtG,EAAMwB,OAAO,kBAAC+E,EAAA,EAAD,CAAcH,OAAK,MAEhF,kBAAC3F,EAAA,EAAD,KACI,kBAAC+F,EAAA,EAAD,CAAqBP,IAAKjG,EAAMiG,KAAK,kBAACQ,EAAA,EAAD,CAAcL,OAAK,MAE5D,kBAAC3F,EAAA,EAAD,KACI,kBAACiG,EAAA,EAAD,CAAsBT,IAAKjG,EAAMiG,IAAKzE,MAAOxB,EAAMwB,OAAO,kBAACmF,EAAA,EAAD,CAAcP,OAAK,OAGrF,kBAAChG,EAAA,EAAD,CAAKC,UAAU,QACX,kBAACI,EAAA,EAAD,KACI,kBAACmG,EAAA,EAAD,CAAsBX,IAAKjG,EAAMiG,IAAKzE,MAAOxB,EAAMwB,OAAO,kBAACqF,EAAA,EAAD,CAAeT,OAAK,MAElF,kBAAC3F,EAAA,EAAD,KACI,kBAACqG,EAAA,EAAD,CAAmBb,IAAKjG,EAAMiG,IAAKzE,MAAOxB,EAAMwB,OAAO,kBAACuF,EAAA,EAAD,CAAYX,OAAK,MAE5E,kBAAC3F,EAAA,EAAD,KACI,kBAACuG,EAAA,EAAD,CAAoBf,IAAKjG,EAAMiG,IAAKzE,MAAOxB,EAAMwB,OAAO,kBAACyF,EAAA,EAAD,CAAYb,OAAK,MAE7E,kBAAC3F,EAAA,EAAD,KACI,kBAACyG,EAAA,EAAD,CAAoBjB,IAAKjG,EAAMiG,IAAKzE,MAAOxB,EAAMwB,OAAO,kBAAC2F,EAAA,EAAD,CAAaf,OAAK,SAK1F,kBAACV,EAAA,EAAMvC,OAAP,KACI,kBAAC5B,EAAA,EAAD,CAAQN,QAAQ,YAAYoC,QAASoC,GAArC,YCrEL,SAAS2B,EAAMpH,GAC1B,OACI,kBAACoB,EAAA,EAAD,CAAYf,UAAU,OAAOgB,GAAIZ,IAAKO,KAAK,MACvC,kBAACI,EAAA,EAAWE,QAAZ,KACI,kBAACC,EAAA,EAAD,CACIC,MAAM,QACNnB,UAAU,OAAOoB,GAAG,eACpBG,UAAQ,EACRX,QAAQ,aAER,kBAAC,IAAD,CAAUD,KAAK,UAGvB,kBAACU,EAAA,EAAD,CACIF,MAAM,QACNG,UAAQ,EACRC,UAAQ,EACRC,YAAY,WACZC,aAAW,WACXC,mBAAiB,eACjBC,MAAOhC,EAAMiC,SCpBd,SAASoF,IACpB,OACI,kBAAC9F,EAAA,EAAD,CAAQC,MAAM,SAASP,QAAQ,YAAYoC,QAAS,WAAKiE,MAAM,qBAAsBtG,KAAK,KAAKX,UAAU,QACrG,kBAAC,IAAD,CAAeW,KAAK,SCCjB,SAASuG,EAAUvH,GAC9B,OACI,oCACA,kBAACI,EAAA,EAAD,CAAKC,UAAU,2CAA2CG,WAAS,GAC/D,kBAACC,EAAA,EAAD,CAAKS,GAAI,GACL,kBAACd,EAAA,EAAD,CAAKI,WAAS,GACTR,EAAMwH,MAAM,kBAACJ,EAAD,CAAOnF,MAAM,SAAS,KAClCjC,EAAMyH,KAAK,kBAACtD,EAAD,CAAMK,UAAW,IAAKG,QAAS,MAAO,KACjD3E,EAAM0H,QAAQ,kBAACvG,EAAD,CAAac,MAAO,MAAO,OAGlD,kBAACxB,EAAA,EAAD,CAAKC,GAAI,QACL,kBAACN,EAAA,EAAD,CAAKC,UAAU,wCAAwCG,WAAS,GAC3DR,EAAM2H,MAAM,kBAACrC,EAAD,CAAO9D,MAAO,gBAAiByE,IAAK,qCAAsC,KACtFjG,EAAM4H,OAAO,kBAACP,EAAD,MAAU,SChB5C,IAAMhD,GAAYwD,wBAAc,CAC5BvD,MAAM,KACNC,SAAS,eAqBEuD,GAlBA,SAAC9H,GAAW,IAAD,EACCmC,mBAAS,MADV,mBAEhB4F,EAAU,CAACzD,MAFK,KAECC,SAFD,MAGtB,OACI,kBAACrB,EAAA,EAAD,CAAMc,GAAIhE,EAAMgE,GAAI3D,UAAWL,EAAMK,WAAW,OAAQC,MAAO,CAACJ,MAAM,OAAO8H,SAAS,UAClF,kBAAC9E,EAAA,EAAK6C,KAAN,KACK/F,EAAMwB,MAAM,kBAAC0B,EAAA,EAAK4C,MAAN,KAAa9F,EAAMwB,OAAoB,KACpD,kBAAC,EAAD,CAAYrB,IAAkB,YAAbH,EAAMiE,OACtBjE,EAAMkE,KACP,kBAACG,GAAY4D,SAAb,CAAsBjG,MAAO+F,GACzB,kBAACR,EAAD,CAAWC,MAAoB,YAAbxH,EAAMiE,KAAkBwD,MAAI,EAACC,QAAsB,YAAb1H,EAAMiE,KAAkB0D,MAAoB,YAAb3H,EAAMiE,KAAkB2D,QAAM,MAG7H,kBAAC1F,EAAD,CAAgBsB,WAAYxD,EAAMiE,KAAMnB,SAAU9C,EAAMyB,GAAIe,aAAc,M,8BCevE0F,OAnCf,WACE,OACE,kBAACC,GAAA,EAAD,CAAQnE,GAAG,QAAQoE,OAAO,MACtB,kBAACD,GAAA,EAAOE,MAAR,CAAcC,KAAK,SAAnB,eACA,kBAACH,GAAA,EAAOI,OAAR,CAAejF,gBAAc,qBAC7B,kBAAC6E,GAAA,EAAO1E,SAAR,CAAiBhC,GAAG,oBAChB,kBAAC+G,GAAA,EAAD,CAAKnI,UAAU,gBACf,kBAACmI,GAAA,EAAIC,KAAL,CAAUH,KAAK,SAAf,YACA,kBAACE,GAAA,EAAIC,KAAL,CAAUH,KAAK,YAAf,WACA,kBAACE,GAAA,EAAIC,KAAL,CAAUH,KAAK,WAAf,UACA,kBAACE,GAAA,EAAIC,KAAL,CAAUH,KAAK,UAAf,QACA,kBAACE,GAAA,EAAIC,KAAL,CAAUH,KAAK,SAAf,SASA,kBAACI,GAAA,EAAD,CAAMC,QAAM,GACV,kBAACjH,EAAA,EAAD,CAAauC,KAAK,OAAOpC,YAAY,SAASxB,UAAU,YACxD,kBAACkB,EAAA,EAAD,CAAQN,QAAQ,mBAAhB,WAEF,kBAACuH,GAAA,EAAD,CAAKnI,UAAU,aACb,kBAACmI,GAAA,EAAIC,KAAL,CAAUH,KAAK,UAAS,kBAAC,IAAD,OACxB,kBAACE,GAAA,EAAIC,KAAL,CAAUH,KAAK,kBAAiB,kBAAC,IAAD,OAChC,kBAACE,GAAA,EAAIC,KAAL,CAAUH,KAAK,WAAU,kBAAC,IAAD,OACzB,kBAACE,GAAA,EAAIC,KAAL,CAAUH,KAAK,YAAW,kBAAC,IAAD,W,SCGzBM,GA/BE,SAAC5I,GAAW,IAAD,EACAmC,oBAAS,GADT,mBACjBC,EADiB,KACXC,EADW,OAEIF,mBAASnC,EAAM6I,WAFnB,mBAEjBC,EAFiB,KAETC,EAFS,KAMxB,OACI,kBAACpF,EAAA,EAAUI,KAAX,CACIT,gBAAc,gBACd0F,aAAc,kBAAM3G,GAAQ,IAC5B4G,aAAc,kBAAM5G,GAAQ,IAC5BhC,UAAU,qDAEV,8BACKL,EAAMkJ,MAEX,kBAACC,GAAA,EAAD,CAAMzF,GAAItB,GACN,kBAACb,EAAA,EAAD,CACIE,GAAG,gBACH8B,gBAAenB,EACfiB,QAjBG,WACf0F,GAAWD,IAiBC9H,KAAK,KACLC,QAAS6H,EAAO,YAAY,WAE3BA,EAAO,WAAW,aCHxBM,GApBS,WAAO,IAAD,EACOjH,mBAAS,IADhB,mBACnBkH,EADmB,KACRC,EADQ,KAQ1B,OANAC,qBAAU,WACN,sBAAC,sBAAA7G,EAAA,6DACCE,QAAQC,IAAI,kBADb,KAECyG,EAFD,SAEsBvG,IAAMC,IAAI,8CAFhC,mBAE+EC,MAF/E,wDAAD,KAIF,IAEE,kBAACC,EAAA,EAAD,CAAM5C,MAAO,CAACJ,MAAM,OAAOsJ,SAAS,UAChC,kBAACtG,EAAA,EAAK4C,MAAN,CAAYzF,UAAU,aAAtB,cACA,kBAAC6C,EAAA,EAAK6C,KAAN,CAAW1F,UAAU,OACjB,kBAACsD,EAAA,EAAD,CAAW1C,QAAQ,QAAQZ,UAAU,cAChCgJ,EAAWzF,KAAI,SAACC,EAAIC,GAAL,OAAW,kBAAC,GAAD,CAAUA,IAAKA,EAAKoF,KAAMrF,EAAIqF,KAAML,WAAW,WCsB/EY,OA/Bf,WAAgB,IAAD,EACUtH,mBAAS,IADnB,mBACNuH,EADM,KACAC,EADA,KAQb,OANAJ,qBAAU,WACN,sBAAC,sBAAA7G,EAAA,6DACCE,QAAQC,IAAI,kBADb,KAEC8G,EAFD,SAEiB5G,IAAMC,IAAI,uDAF3B,mBAEmFC,MAFnF,wDAAD,KAIF,IAEA,kBAAC,IAAYgF,SAAb,CAAsBjG,MAAO,CAAEhB,KAAK,UAClC,yBAAKX,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC+C,EAAA,EAAD,CAAWwG,OAAK,EAACvJ,UAAU,oBACzB,kBAACD,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAKC,GAAI,OAAQL,UAAU,yBACzB,kBAACwJ,GAAD,OAEF,kBAACpJ,EAAA,EAAD,KACGiJ,EAAM9F,KAAI,SAACC,GAAD,OAAO,kBAAC,GAAD,CAAQC,IAAKD,EAAIpC,GAAIA,GAAIoC,EAAIpC,GAAIwC,KAAK,SAASzC,MAAOqC,EAAIrC,MAAO0C,KAAML,EAAIK,KAAM4F,OAAQjG,EAAIiG,aAEjH,kBAACrJ,EAAA,EAAD,CAAKC,GAAI,OAAQL,UAAU,yBACzB,kBAACwJ,GAAD,YClBME,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpI,QAAQoI,MAAMA,EAAMC,c","file":"static/js/main.778e4b3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userThumb.35d08c44.jpeg\";","import React from 'react';\r\nimport userThumb from './userThumb.jpeg'\r\nimport {Badge,Col,Row,Image} from 'react-bootstrap';\r\n\r\nconst AuthorInfo = (props) => {\r\n    const imgSize={width:props.min?\"36px\":\"72px\"}\r\n    return  (\r\n        <Row className=\"my-1 pt-2 pb-0\" style={{lineHeight:\"1.2\"}} noGutters> \r\n            <Col xs={\"auto\"} className=\"mr-1 text-center\">\r\n                <Image className=\"mt-md-0 my-2\" src={userThumb} roundedCircle style={imgSize}/>\r\n            </Col>\r\n            <Col>\r\n                <Col>\r\n                    <p className=\"pr-0 m-0\">\r\n                        <strong>\r\n                            Abhishek Parashar Maheshwari\r\n                        </strong>\r\n                        {props.min?null:<span className=\"text-muted d-none d-md-inline ml-1\" >\r\n                            · last updated Jul 23\r\n                        </span>}\r\n                    </p>\r\n                    {props.min?null:<span className=\"text-muted\" style={{lineHeight:\"1\"}}>(@para-abhi) <Badge size=\"sm\" variant=\"warning\">Noobie</Badge></span>}\r\n                    {props.min?null:<p className=\"my-1\">\r\n                        I love to draw and love. I repeat, I love to draw and love.\r\n                    </p>}\r\n                </Col>\r\n                <Col className={props.min?\"pl-3\":\"d-md-none pl-md-1\"} md=\"auto\">\r\n                    <span className=\"text-muted\">\r\n                        last updated Jul 23\r\n                    </span>\r\n                </Col>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default AuthorInfo;","import React,{useState} from 'react';\r\nimport Entity from './Entity';\r\nimport {FaComment,FaAngleDown,FaAngleUp} from 'react-icons/fa';\r\nimport {Button,Card,ListGroup,InputGroup,FormControl,Col,Row,Collapse, Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction CommentIcon(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Comment\"\r\n                    className=\"pt-0\" id=\"basic-addon1\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <FaComment size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Comments\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}\r\n\r\nfunction CommentSection(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    if(!props.commentCount)\r\n        return null;\r\n    const showComments = async ()=>{\r\n        setOpen(!open)\r\n        if(comments.length===0){\r\n            console.log('Fetching Comments for',props.parentId);\r\n            setComments((await axios.get('https://jsonplaceholder.typicode.com/comments?_limit=2')).data);\r\n        }\r\n    }\r\n    return (\r\n        <Card.Footer className=\"p-0 pl-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <hr/>\r\n                    </Col>\r\n                    <Button size=\"sm\" className=\"mx-auto my-0\" variant=\"link\"\r\n                        onClick={showComments}\r\n                        /*onClick={() => setOpen(!open)}*/\r\n                        aria-controls=\"comment-sec\"\r\n                        aria-expanded={open} \r\n                    >\r\n                        {props.parentType==='comment'?`View ${props.commentCount} replies `:'View comments '}\r\n                        {open?<FaAngleUp size=\"1em\"/>:<FaAngleDown size=\"1em\"/>}\r\n                    </Button>\r\n                    <Col>\r\n                        <hr/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Collapse in={open}>\r\n                        <ListGroup id=\"comment-sec\" variant=\"flush\" className=\"border-left\">\r\n                            {comments.map((obj,key)=>\r\n                                <ListGroup.Item key={key} className=\"p-0 border-0\">\r\n                                    <Entity\r\n                                        bg=\"light\" \r\n                                        className=\"w-100 border-bottom-0 border-left-0 border-right-0 rounded-0\"\r\n                                        type=\"comment\" \r\n                                        body={obj.body}\r\n                                    />\r\n                                </ListGroup.Item>)\r\n                            }\r\n                        </ListGroup>\r\n                    </Collapse>\r\n                </Row>\r\n            </Container>\r\n        </Card.Footer>\r\n    );\r\n}\r\nexport {CommentIcon,CommentSection};","import React,{useState, useContext} from 'react';\r\nimport {FaThumbsDown,FaThumbsUp} from 'react-icons/fa';\r\nimport {Button,Col,InputGroup,FormControl,Spinner} from 'react-bootstrap';\r\nimport {VoteContext} from './Entity';\r\n\r\n\r\nexport default function Vote(props){\r\n    const {voted,setVoted} = useContext(VoteContext);\r\n    const [downvoteCount,setDownvoteCount] = useState(props.downvotes);\r\n    const [upvoteCount,setUpvoteCount] = useState(props.upvotes);\r\n    const [clicked,setClicked] = useState(null);\r\n    const voteHandler = (upvote) => {\r\n        setClicked(upvote);\r\n        if(voted===null){\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                upvote?setUpvoteCount(upvoteCount+1):setDownvoteCount(downvoteCount+1);\r\n                setClicked(null);\r\n            },500)\r\n        }else if(voted===upvote){\r\n            setTimeout(()=>{\r\n                setVoted(null);\r\n                upvote?setUpvoteCount(upvoteCount-1):setDownvoteCount(downvoteCount-1);\r\n                setClicked(null);\r\n            },500)\r\n        }else{\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                if(upvote){\r\n                    setUpvoteCount(upvoteCount+1);\r\n                    setDownvoteCount(downvoteCount-1);\r\n                }else{\r\n                    setUpvoteCount(upvoteCount-1);\r\n                    setDownvoteCount(downvoteCount+1);\r\n                }\r\n                setClicked(null);\r\n            },500)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button\r\n                        title=\"Like\" \r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===true ? \"primary\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(true)}}\r\n                    >\r\n                        {clicked===true?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsUp size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Likes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Likes\"\r\n                    aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={upvoteCount}\r\n                />\r\n            </InputGroup>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button \r\n                        title=\"Dislike\"\r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===false ? \"danger\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(false)}}\r\n                    >\r\n                        {clicked===false?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsDown size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Dislikes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Dislikes\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={downvoteCount}\r\n                />\r\n            </InputGroup>\r\n        </>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport {FaShareAlt} from 'react-icons/fa';\r\nimport {Button,Modal,Container,Row,Col} from 'react-bootstrap';\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    WhatsappShareButton,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    PinterestIcon,\r\n    RedditIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    WhatsappIcon\r\n  } from \"react-share\";\r\n\r\nexport default function Share(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button title=\"Share\" variant=\"secondary\" onClick={handleShow} size=\"sm\" className=\"mr-1 pt-0\">\r\n                <FaShareAlt size=\"1em\"/>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Share</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Share via:\r\n                    <Container className=\"p-3\">\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <EmailShareButton url={props.url} subject={props.title} body={\"Qusol\"}><EmailIcon round/></EmailShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <FacebookShareButton url={props.url} quote={props.title}><FacebookIcon round/></FacebookShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <LinkedinShareButton url={props.url}><LinkedinIcon round/></LinkedinShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <WhatsappShareButton  url={props.url} title={props.title}><WhatsappIcon round/></WhatsappShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <PinterestShareButton url={props.url} title={props.title}><PinterestIcon round/></PinterestShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <RedditShareButton url={props.url} title={props.title}><RedditIcon round/></RedditShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TumblrShareButton  url={props.url} title={props.title}><TumblrIcon round/></TumblrShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TwitterShareButton url={props.url} title={props.title}><TwitterIcon round/></TwitterShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {FaRegEye} from 'react-icons/fa';\r\nimport {Button,InputGroup,FormControl,Col} from 'react-bootstrap';\r\n\r\nexport default function Views(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" as={Col} size=\"sm\">\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Views\"\r\n                    className=\"pt-0\" id=\"basic-addon1\" \r\n                    disabled\r\n                    variant=\"secondary\"\r\n                >\r\n                    <FaRegEye size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Views\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}","import React from 'react';\r\nimport {FaExclamation} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport default function Report() {\r\n    return (\r\n        <Button title=\"Report\" variant=\"secondary\" onClick={()=>{alert(\"Report Clicked!!\")}} size=\"sm\" className=\"pt-0\">\r\n            <FaExclamation size=\"1em\"/>\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Col,Row} from 'react-bootstrap';\r\nimport Vote from './Vote';\r\nimport Share from './Share';\r\nimport Views from './Views';\r\nimport {CommentIcon} from './Comments';\r\nimport Report from './Report';\r\n\r\nexport default function ActionBar(props){\r\n    return (\r\n        <>\r\n        <Row className=\"mt-4 justify-content-between flex-nowrap\" noGutters>\r\n            <Col md={9}>\r\n                <Row noGutters>\r\n                    {props.views?<Views count=\"2393\"/>:null}\r\n                    {props.vote?<Vote downvotes={231} upvotes={789}/>:null}\r\n                    {props.comment?<CommentIcon count={290}/>:null}\r\n                </Row>\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n                <Row className=\"justify-content-end flex-nowrap h-100\" noGutters>\r\n                    {props.share?<Share title={\"Element Title\"} url={\"https://element.url.om/elimentId\"}/>:null}\r\n                    {props.report?<Report/>:null}\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    );\r\n}","import React, { useState, createContext } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport {CommentSection} from './Comments';\r\nimport ActionBar from './ActionBar';\r\n\r\nconst VoteContext=createContext({\r\n    voted:null,\r\n    setVoted:()=>{}\r\n});\r\n\r\nconst Entity = (props) => {\r\n    const [voted,setVoted]=useState(null);//use props false(dislike)  null(not-voted)  true(like)\r\n    const voteValue={voted,setVoted};\r\n    return  (\r\n        <Card bg={props.bg} className={props.className||\"mb-3\"} style={{width:\"100%\",maxWidth:\"728px\"}}>\r\n            <Card.Body>\r\n                {props.title?<Card.Title>{props.title}</Card.Title>:null}\r\n                <AuthorInfo min={props.type==='comment'}/>\r\n                {props.body}\r\n                <VoteContext.Provider value={voteValue}>\r\n                    <ActionBar views={props.type!=='comment'} vote comment={props.type!=='comment'} share={props.type!=='comment'} report/>\r\n                </VoteContext.Provider>\r\n            </Card.Body>\r\n            <CommentSection parentType={props.type} parentId={props.id} commentCount={3}/>\r\n        </Card>\r\n    )\r\n}\r\nexport {VoteContext};\r\nexport default Entity;","import React from 'react';\r\nimport { FaGlobe,FaBell, FaUserAlt,FaIdBadge } from \"react-icons/fa\";\r\nimport {Navbar, Form, Nav, FormControl, Button} from 'react-bootstrap';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">Qusol-Image</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-4 mr-auto\">\r\n            <Nav.Link href=\"#home\">Trending</Nav.Link>\r\n            <Nav.Link href=\"#article\">Article</Nav.Link>\r\n            <Nav.Link href=\"#answer\">Answer</Nav.Link>\r\n            <Nav.Link href=\"#blogs\">Blog</Nav.Link>\r\n            <Nav.Link href=\"#poll\">Poll</Nav.Link>\r\n            {/*<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown> */}\r\n            </Nav>\r\n            <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n              <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n            <Nav className=\"ml-5 mr-4\">\r\n              <Nav.Link href=\"#globe\"><FaGlobe/></Nav.Link>\r\n              <Nav.Link href=\"#notifications\"><FaBell/></Nav.Link>\r\n              <Nav.Link href=\"#badges\"><FaIdBadge/></Nav.Link>\r\n              <Nav.Link href=\"#profile\"><FaUserAlt/></Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport {ListGroup, Button,Fade} from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [follow, setFollow] = useState(props.following);\r\n    const toggleFollow=()=>{\r\n        setFollow(!follow); \r\n    }\r\n    return(\r\n        <ListGroup.Item\r\n            aria-controls=\"follow-button\"\r\n            onMouseEnter={() => setOpen(true)}\r\n            onMouseLeave={() => setOpen(false)}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <span>\r\n                {props.name}\r\n            </span>\r\n            <Fade in={open}>\r\n                <Button\r\n                    id=\"follow-button\"\r\n                    aria-expanded={open}\r\n                    onClick={toggleFollow}\r\n                    size=\"sm\"\r\n                    variant={follow?\"secondary\":\"primary\"}\r\n                >\r\n                    {follow?\"Unfollow\":\"Follow\"}\r\n                </Button>\r\n            </Fade>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Posts');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/users')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card style={{width:\"100%\",minWidth:\"271px\"}}>\r\n            <Card.Title className=\"pt-2 px-3\">Categories</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} name={obj.name} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React,{useState, useEffect} from 'react';\nimport { IconContext } from \"react-icons\";\nimport Entity from './components/Entity';\nimport Navbar from './components/Navbar';\nimport CategoriesPanel from './components/Categories';\nimport axios from 'axios';\nimport {Container,Col,Row} from 'react-bootstrap';\n\n\nfunction App() {\n  const [posts,setPosts]=useState([]);\n  useEffect(()=>{\n      (async ()=>{\n        console.log('Fetching Posts');\n        setPosts((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\n      })()\n  },[]);\n  return (\n    <IconContext.Provider value={{ size:\"1.5em\"}}>\n      <div className=\"App\">\n        <Navbar/>\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\n          <Row>\n            <Col xs={\"auto\"} className=\"d-none d-lg-block p-0\">\n              <CategoriesPanel/>\n            </Col>\n            <Col>\n              {posts.map((obj)=><Entity key={obj.id} id={obj.id} type=\"answer\" title={obj.title} body={obj.body} userId={obj.userId}/>)}\n            </Col>\n            <Col xs={\"auto\"} className=\"d-none d-xl-block p-0\">\n              <CategoriesPanel/>\n            </Col>\n          </Row>\n        </Container>\n        \n      </div>\n    </IconContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}