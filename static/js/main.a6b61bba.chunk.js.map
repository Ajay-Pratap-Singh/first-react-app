{"version":3,"sources":["components/UserSummary.js","components/Comments.js","components/Vote.js","components/Share.js","components/Views.js","components/Report.js","components/ViewsVoteShareReport.js","components/Post.js","components/Navbar.js","components/Categories/Category.js","components/Categories/index.js","App.js","serviceWorker.js","index.js"],"names":["UserSummary","props","useState","userPublicProfile","setUserPublicProfile","useEffect","a","userId","axios","get","data","className","name","username","Spinner","animation","role","size","CommentIcon","InputGroup","as","Col","Prepend","Button","title","id","variant","FormControl","readOnly","disabled","placeholder","aria-label","aria-describedby","value","count","CommentSection","open","setOpen","Row","onClick","aria-controls","aria-expanded","Collapse","in","ListGroup","Vote","useContext","VoteContext","voted","setVoted","downvotes","downvoteCount","setDownvoteCount","upvotes","upvoteCount","setUpvoteCount","clicked","setClicked","voteHandler","upvote","setTimeout","Share","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","Container","EmailShareButton","url","subject","body","EmailIcon","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","PinterestShareButton","PinterestIcon","RedditShareButton","RedditIcon","TumblrShareButton","TumblrIcon","TwitterShareButton","TwitterIcon","Footer","Views","Report","alert","ViewsVoteShareReport","createContext","Post","contextValue","Card","Provider","NavBar","Navbar","bg","expand","Brand","href","Toggle","Nav","Link","Form","inline","type","Category","following","follow","setFollow","Item","onMouseEnter","onMouseLeave","Fade","CategoriesPanel","categories","setCategories","console","log","map","obj","key","App","posts","setPosts","fluid","Categories","md","lg","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a6b61bba.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\n\r\nconst UserSummary = (props) => {\r\n    const [userPublicProfile, setUserPublicProfile] = useState({});\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            if(props.userId)\r\n            setUserPublicProfile((await axios.get('https://jsonplaceholder.typicode.com/users/'+props.userId)).data);\r\n        })()\r\n    },[props.userId])\r\n    return(\r\n        <span className=\"text-muted\">\r\n            {userPublicProfile.name ? `${userPublicProfile.name} (@${userPublicProfile.username})`: <Spinner animation=\"border\" role=\"status\" size=\"sm\"/>}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default UserSummary;","import React,{useState} from 'react';\r\nimport {FaComment,FaAngleDown,FaAngleUp} from 'react-icons/fa';\r\nimport {Button,ListGroup,InputGroup,FormControl,Col,Row,Collapse} from 'react-bootstrap';\r\n\r\nfunction CommentIcon(props){\r\n    return (\r\n        <InputGroup as={Col}>\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Comment\"\r\n                    size=\"sm\" className=\"pt-0\" id=\"basic-addon1\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <FaComment size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Comments\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n                size=\"sm\"\r\n            />\r\n        </InputGroup>\r\n    );\r\n}\r\nfunction CommentSection() {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n            <Col>\r\n                <hr/>\r\n            </Col>\r\n            <Button className=\"mx-auto\" variant=\"link\"\r\n                onClick={() => setOpen(!open)}\r\n                aria-controls=\"comment-sec\"\r\n                aria-expanded={open} \r\n            >\r\n                Comments\r\n                {\r\n                    open?\r\n                    <FaAngleUp size=\"1em\"/>:\r\n                    <FaAngleDown size=\"1em\"/>\r\n                }\r\n            </Button>\r\n            <Col>\r\n                <hr/>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Collapse in={open}>\r\n                <ListGroup id=\"comment-sec\" variant=\"flush\" className=\"border-top\">\r\n                    {/*categories.map((obj)=><Category name={obj.name} following={true}/>)*/}\r\n                </ListGroup>\r\n            </Collapse>\r\n        </Row>\r\n        </>\r\n    );\r\n}\r\nexport {CommentIcon,CommentSection};","import React,{useState, useContext} from 'react';\r\nimport {FaThumbsDown,FaThumbsUp} from 'react-icons/fa';\r\nimport {Button,Col,InputGroup,FormControl,Spinner} from 'react-bootstrap';\r\nimport {VoteContext} from './Post';\r\n\r\nexport default function Vote(props){\r\n    const {voted,setVoted} = useContext(VoteContext);\r\n    const [downvoteCount,setDownvoteCount] = useState(props.downvotes);\r\n    const [upvoteCount,setUpvoteCount] = useState(props.upvotes);\r\n    const [clicked,setClicked] = useState(null);\r\n    const voteHandler = (upvote) => {\r\n        setClicked(upvote);\r\n        if(voted===null){\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                upvote?setUpvoteCount(upvoteCount+1):setDownvoteCount(downvoteCount+1);\r\n                setClicked(null);\r\n            },500)\r\n        }else if(voted===upvote){\r\n            setTimeout(()=>{\r\n                setVoted(null);\r\n                upvote?setUpvoteCount(upvoteCount-1):setDownvoteCount(downvoteCount-1);\r\n                setClicked(null);\r\n            },500)\r\n        }else{\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                if(upvote){\r\n                    setUpvoteCount(upvoteCount+1);\r\n                    setDownvoteCount(downvoteCount-1);\r\n                }else{\r\n                    setUpvoteCount(upvoteCount-1);\r\n                    setDownvoteCount(downvoteCount+1);\r\n                }\r\n                setClicked(null);\r\n            },500)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <InputGroup as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button\r\n                        title=\"Like\" \r\n                        size=\"sm\" className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===true ? \"primary\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(true)}}\r\n                    >\r\n                        {clicked===true?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsUp size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Likes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={upvoteCount}\r\n                    size=\"sm\"\r\n                />\r\n            </InputGroup>\r\n            <InputGroup as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button \r\n                        title=\"Dislike\"\r\n                        size=\"sm\" className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===false ? \"danger\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(false)}}\r\n                    >\r\n                        {clicked===false?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsDown size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Dislikes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={downvoteCount}\r\n                    size=\"sm\"\r\n                />\r\n            </InputGroup>\r\n        </>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport {FaShareAlt} from 'react-icons/fa';\r\nimport {Button,Modal,Container,Row,Col} from 'react-bootstrap';\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    WhatsappShareButton,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    PinterestIcon,\r\n    RedditIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    WhatsappIcon\r\n  } from \"react-share\";\r\n\r\nexport default function Share(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button title=\"Share\" variant=\"secondary\" onClick={handleShow} size=\"sm\" className=\"pt-0\">\r\n                <FaShareAlt size=\"1em\"/>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Share</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Share via:\r\n                    <Container className=\"p-3\">\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <EmailShareButton url={props.url} subject={props.title} body={\"Qusol\"}><EmailIcon round/></EmailShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <FacebookShareButton url={props.url} quote={props.title}><FacebookIcon round/></FacebookShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <LinkedinShareButton url={props.url}><LinkedinIcon round/></LinkedinShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <WhatsappShareButton  url={props.url} title={props.title}><WhatsappIcon round/></WhatsappShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <PinterestShareButton url={props.url} title={props.title}><PinterestIcon round/></PinterestShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <RedditShareButton url={props.url} title={props.title}><RedditIcon round/></RedditShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TumblrShareButton  url={props.url} title={props.title}><TumblrIcon round/></TumblrShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TwitterShareButton url={props.url} title={props.title}><TwitterIcon round/></TwitterShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {FaRegEye} from 'react-icons/fa';\r\nimport {Button,InputGroup,FormControl,Col} from 'react-bootstrap';\r\n\r\nexport default function Views(props){\r\n    return (\r\n        <InputGroup as={Col}>\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Views\"\r\n                    size=\"sm\" className=\"pt-0\" id=\"basic-addon1\" \r\n                    disabled\r\n                    variant=\"secondary\"\r\n                >\r\n                    <FaRegEye size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Views\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n                size=\"sm\"\r\n            />\r\n        </InputGroup>\r\n    );\r\n}","import React from 'react';\r\nimport {FaExclamation} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport default function Report() {\r\n    return (\r\n        <Button title=\"Report\" variant=\"secondary\" onClick={()=>{alert(\"Report Clicked!!\")}} size=\"sm\" className=\"pt-0 ml-3\">\r\n            <FaExclamation size=\"1em\"/>\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Row} from 'react-bootstrap';\r\nimport Vote from './Vote';\r\nimport Share from './Share';\r\nimport Views from './Views';\r\nimport {CommentIcon} from './Comments';\r\nimport Report from './Report';\r\n\r\nexport default function ViewsVoteShareReport(props){\r\n    return (\r\n        <>\r\n        <Row className=\"mt-4\">\r\n            <Views count=\"2393\"/>\r\n            <Vote downvotes={231} upvotes={789}/>\r\n            <CommentIcon count={290}/>\r\n            <Share title={\"Element Title\"} url={\"https://element.url.om/elimentId\"}/>\r\n            <Report/>\r\n        </Row>\r\n        </>\r\n    );\r\n}","import React, { useState, createContext } from 'react';\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport {Card} from 'react-bootstrap';\r\nimport UserSummary from './UserSummary';\r\nimport {CommentSection} from './Comments';\r\nimport ViewsVoteShareReport from './ViewsVoteShareReport';\r\n\r\nconst VoteContext=createContext({\r\n    voted:null,\r\n    setVoted:()=>{}\r\n});\r\n\r\nconst Post = (props) => {\r\n    const [voted,setVoted]=useState(null);//use props\r\n    const contextValue={voted,setVoted};\r\n    return  (\r\n        <Card className=\"mb-3\">\r\n            <Card.Body>\r\n                <FaUserAlt className=\"mr-3 mb-3\"/>\r\n                <UserSummary userId={props.userId}/>\r\n                <br/>\r\n                <h4>{props.title}</h4>\r\n                {props.body}<br/>\r\n                <VoteContext.Provider value={contextValue}>\r\n                    <ViewsVoteShareReport/>\r\n                </VoteContext.Provider>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <CommentSection/>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}\r\nexport {VoteContext};\r\nexport default Post;","import React from 'react';\r\nimport { FaGlobe,FaBell, FaUserAlt,FaIdBadge } from \"react-icons/fa\";\r\nimport {Navbar, Form, Nav, FormControl, Button} from 'react-bootstrap';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">Qusol-Image</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-4 mr-auto\">\r\n            <Nav.Link href=\"#home\">Trending</Nav.Link>\r\n            <Nav.Link href=\"#article\">Article</Nav.Link>\r\n            <Nav.Link href=\"#answer\">Answer</Nav.Link>\r\n            <Nav.Link href=\"#blogs\">Blog</Nav.Link>\r\n            <Nav.Link href=\"#poll\">Poll</Nav.Link>\r\n            {/*<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown> */}\r\n            </Nav>\r\n            <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n              <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n            <Nav className=\"ml-5 mr-4\">\r\n              <Nav.Link href=\"#globe\"><FaGlobe/></Nav.Link>\r\n              <Nav.Link href=\"#notifications\"><FaBell/></Nav.Link>\r\n              <Nav.Link href=\"#badges\"><FaIdBadge/></Nav.Link>\r\n              <Nav.Link href=\"#profile\"><FaUserAlt/></Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport {ListGroup, Button,Fade} from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [follow, setFollow] = useState(props.following);\r\n    const toggleFollow=()=>{\r\n        setFollow(!follow); \r\n    }\r\n    return(\r\n        <ListGroup.Item\r\n            aria-controls=\"follow-button\"\r\n            onMouseEnter={() => setOpen(true)}\r\n            onMouseLeave={() => setOpen(false)}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <span>\r\n                {props.name}\r\n            </span>\r\n            <Fade in={open}>\r\n                <Button\r\n                    id=\"follow-button\"\r\n                    aria-expanded={open}\r\n                    onClick={toggleFollow}\r\n                    size=\"sm\"\r\n                    variant={follow?\"secondary\":\"primary\"}\r\n                >\r\n                    {follow?\"Unfollow\":\"Follow\"}\r\n                </Button>\r\n            </Fade>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Posts');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/users')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card>\r\n            <Card.Title className=\"pt-2 px-3\">Categories</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} name={obj.name} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React,{useState, useEffect} from 'react';\nimport { IconContext } from \"react-icons\";\nimport Post from './components/Post';\nimport Navbar from './components/Navbar';\nimport CategoriesPanel from './components/Categories';\nimport axios from 'axios';\nimport {Container,Col,Row} from 'react-bootstrap';\n\n\nfunction App() {\n  const [posts,setPosts]=useState([]);\n  useEffect(()=>{\n      (async ()=>{\n        console.log('Fetching Posts');\n        setPosts((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\n      })()\n  },[]);\n  return (\n    <IconContext.Provider value={{ size:\"1.5em\"}}>\n      <div className=\"App\">\n        <Navbar/>\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\n          <Row>\n            <Col className=\"d-none d-md-block p-0\">\n              <CategoriesPanel/>\n            </Col>\n            <Col md={12} lg={7}>\n              {posts.map((obj)=><Post key={obj.id} title={obj.title} body={obj.body} userId={obj.userId}/>)}\n            </Col>\n            <Col className=\"d-none d-lg-block p-0\">\n              <CategoriesPanel/>\n            </Col>\n          </Row>\n        </Container>\n        \n      </div>\n    </IconContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}