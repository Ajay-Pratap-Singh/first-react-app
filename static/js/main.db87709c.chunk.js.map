{"version":3,"sources":["components/Navbar.js","components/AuthorInfo.js","components/Comments.js","components/Vote.js","components/Share.js","components/Views.js","components/Report.js","components/ActionBar.js","components/EntityHeader.js","components/Entity.js","components/Categories/Category.js","components/Categories/index.js","components/AskQuestion.js","components/Home.js","components/Suggestions/Category.js","components/Suggestions/index.js","components/Editor.js","components/WriteAnswer.js","components/QuestionPage.js","App.js","serviceWorker.js","index.js","components/userThumb.jpeg"],"names":["NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Form","inline","FormControl","type","placeholder","Button","variant","AuthorInfo","props","imgSize","width","min","Row","style","lineHeight","noGutters","Col","xs","Image","src","userThumb","roundedCircle","Badge","size","md","CommentIcon","InputGroup","as","Prepend","title","onClick","setOpenCommentInput","openCommentInput","readOnly","disabled","aria-label","aria-describedby","value","count","CommentInput","useState","comment","setComment","comments","setComments","onSubmit","e","preventDefault","target","reset","setTimeout","body","Label","htmlFor","srOnly","Control","onChange","maxWiddth","CommentSection","open","setOpen","commentCount","showComments","a","length","console","log","parentId","axios","get","data","Card","Footer","fontSize","Container","aria-expanded","parentType","in","ListGroup","map","obj","key","Item","Vote","useContext","VoteContext","voted","setVoted","downvotes","downvoteCount","setDownvoteCount","upvotes","upvoteCount","setUpvoteCount","clicked","setClicked","voteHandler","upvote","Spinner","animation","role","Share","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","EmailShareButton","url","subject","EmailIcon","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","PinterestShareButton","PinterestIcon","RedditShareButton","RedditIcon","TumblrShareButton","TumblrIcon","TwitterShareButton","TwitterIcon","Views","Report","alert","ActionBar","views","vote","OpenCommentInput","share","report","EntityHeader","author","color","to","eid","createContext","Entity","voteValue","Provider","Category","following","follow","setFollow","onMouseEnter","onMouseLeave","name","Fade","CategoriesPanel","categories","setCategories","useEffect","minWidth","AskQuestion","loading","setLoading","question","setQuestion","centered","backdrop","keyboard","Group","controlId","rows","Text","muted","Home","fluid","Categories","posts","userId","Editor","editor","useRef","content","setContent","ref","config","showWordsCounter","showXPathInStatusbar","uploader","insertImageAsBase64URI","buttons","tabIndex","onBlur","newContent","setAnswer","answer","WriteAnswer","questionTitle","setAnswers","answers","QuestionPage","ReactHtmlParser","Suggestions","App","setPosts","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.db87709c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaGlobe,FaBell, FaUserAlt,FaIdBadge } from \"react-icons/fa\";\r\nimport {Navbar, Form, Nav, FormControl, Button} from 'react-bootstrap';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">Qusol-Image</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-4 mr-auto\">\r\n            <Nav.Link href=\"#home\">Trending</Nav.Link>\r\n            <Nav.Link href=\"#article\">Article</Nav.Link>\r\n            <Nav.Link href=\"#answer\">Answer</Nav.Link>\r\n            <Nav.Link href=\"#blogs\">Blog</Nav.Link>\r\n            <Nav.Link href=\"#poll\">Poll</Nav.Link>\r\n            {/*<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown> */}\r\n            </Nav>\r\n            <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n              <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n            <Nav className=\"ml-5 mr-4\">\r\n              <Nav.Link href=\"#globe\"><FaGlobe/></Nav.Link>\r\n              <Nav.Link href=\"#notifications\"><FaBell/></Nav.Link>\r\n              <Nav.Link href=\"#badges\"><FaIdBadge/></Nav.Link>\r\n              <Nav.Link href=\"#profile\"><FaUserAlt/></Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport userThumb from './userThumb.jpeg'\r\nimport {Badge,Col,Row,Image} from 'react-bootstrap';\r\n\r\nconst AuthorInfo = (props) => {\r\n    const imgSize={width:props.min?\"36px\":\"72px\"}\r\n    return  (\r\n        <Row className=\"my-1 pt-2 pb-0\" style={{lineHeight:\"1.2\"}} noGutters> \r\n            <Col xs={\"auto\"} className=\"mr-1 text-center\">\r\n                <Image className=\"mt-md-0 my-2\" src={userThumb} roundedCircle style={imgSize}/>\r\n            </Col>\r\n            <Col>\r\n                <Col>\r\n                    <p className=\"pr-0 m-0\">\r\n                        <strong>\r\n                            Abhishek Parashar Maheshwari\r\n                        </strong>\r\n                        {props.min?null:<span className=\"text-muted d-none d-md-inline ml-1\" >\r\n                            · last updated Jul 23\r\n                        </span>}\r\n                    </p>\r\n                    {props.min?null:<span className=\"text-muted\" style={{lineHeight:\"1\"}}>(@para-abhi) <Badge size=\"sm\" variant=\"warning\">Noobie</Badge></span>}\r\n                    {props.min?null:<p className=\"my-1\">\r\n                        I love to draw and love. I repeat, I love to draw and love.\r\n                    </p>}\r\n                </Col>\r\n                <Col className={props.min?\"pl-3\":\"d-md-none pl-md-1\"} md=\"auto\">\r\n                    <span className=\"text-muted\">\r\n                        last updated Jul 23\r\n                    </span>\r\n                </Col>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default AuthorInfo;","import React,{useState} from 'react';\r\nimport Entity from './Entity';\r\nimport {FaComment,FaAngleDown,FaAngleUp} from 'react-icons/fa';\r\nimport {Button,Card,ListGroup,InputGroup,Form,FormControl,Col,Row,Collapse, Container} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction CommentIcon(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Comment\"\r\n                    className=\"pt-0\" id=\"basic-addon1\"\r\n                    variant=\"secondary\"\r\n                    onClick={()=>{props.setOpenCommentInput(!props.openCommentInput)}}\r\n                >\r\n                    <FaComment size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Comments\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}\r\n\r\nfunction CommentInput(props){\r\n    const [comment,setComment]=useState(\"\");\r\n    const comments=props.comments;\r\n    const setComments=props.setComments;\r\n    const postComment=(e)=>{\r\n        e.preventDefault();\r\n        e.target.reset();\r\n        props.setOpenCommentInput(false);\r\n        setTimeout(()=>{\r\n            if(comment!=='')\r\n            setComments([{body:comment},...comments])\r\n        },50)\r\n    }\r\n    return (\r\n        <Form onSubmit={postComment} className=\"mt-3 w-100\" inline>\r\n            <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\r\n                Comment\r\n            </Form.Label>\r\n            <Form.Control\r\n                onChange={(e)=>{setComment(e.target.value)}}\r\n                style={{width:\"calc( 98% - 75px )\"}}\r\n                className=\"mr-2 mb-2\"\r\n                size=\"sm\"\r\n                placeholder=\"Enter comment\"\r\n            />\r\n            <Button size=\"sm\" type=\"submit\" className=\"mb-2\" style={{maxWiddth:\"70px\"}}>\r\n                Comment\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction CommentSection(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const comments =props.comments;\r\n    const setComments =props.setComments;\r\n\r\n    if(!props.commentCount)\r\n        return null;\r\n\r\n    const showComments = async ()=>{\r\n        setOpen(!open)\r\n        if(comments.length<2){\r\n            console.log('Fetching Comments for',props.parentId);\r\n            setComments([...comments,...(await axios.get('https://jsonplaceholder.typicode.com/comments?_limit=2')).data]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card.Footer style={{fontSize:\"0.9rem\"}} className=\"p-0 pl-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <hr/>\r\n                    </Col>\r\n                    <Button size=\"sm\" className=\"mx-auto my-0\" variant=\"link\"\r\n                        onClick={showComments}\r\n                        /*onClick={() => setOpen(!open)}*/\r\n                        aria-controls=\"comment-sec\"\r\n                        aria-expanded={open} \r\n                    >\r\n                        {props.parentType==='comment'?`View ${props.commentCount} replies `:'View comments '}\r\n                        {open?<FaAngleUp size=\"1em\"/>:<FaAngleDown size=\"1em\"/>}\r\n                    </Button>\r\n                    <Col>\r\n                        <hr/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Collapse in={open}>\r\n                        <ListGroup id=\"comment-sec\" variant=\"flush\" className=\"border-left\">\r\n                            {comments.map((obj,key)=>\r\n                                <ListGroup.Item key={key} className=\"p-0 border-0\">\r\n                                    <Entity\r\n                                        bg=\"light\" \r\n                                        className=\"w-100 border-bottom-0 border-left-0 border-right-0 rounded-0\"\r\n                                        type=\"comment\" \r\n                                        body={obj.body}\r\n                                    />\r\n                                </ListGroup.Item>)\r\n                            }\r\n                        </ListGroup>\r\n                    </Collapse>\r\n                </Row>\r\n            </Container>\r\n        </Card.Footer>\r\n    );\r\n}\r\n\r\nexport {CommentIcon, CommentInput, CommentSection};","import React,{useState, useContext} from 'react';\r\nimport {FaThumbsDown,FaThumbsUp} from 'react-icons/fa';\r\nimport {Button,Col,InputGroup,FormControl,Spinner} from 'react-bootstrap';\r\nimport {VoteContext} from './Entity';\r\n\r\n\r\nexport default function Vote(props){\r\n    const {voted,setVoted} = useContext(VoteContext);\r\n    const [downvoteCount,setDownvoteCount] = useState(props.downvotes);\r\n    const [upvoteCount,setUpvoteCount] = useState(props.upvotes);\r\n    const [clicked,setClicked] = useState(null);\r\n    const voteHandler = (upvote) => {\r\n        setClicked(upvote);\r\n        if(voted===null){\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                upvote?setUpvoteCount(upvoteCount+1):setDownvoteCount(downvoteCount+1);\r\n                setClicked(null);\r\n            },500)\r\n        }else if(voted===upvote){\r\n            setTimeout(()=>{\r\n                setVoted(null);\r\n                upvote?setUpvoteCount(upvoteCount-1):setDownvoteCount(downvoteCount-1);\r\n                setClicked(null);\r\n            },500)\r\n        }else{\r\n            setTimeout(()=>{\r\n                setVoted(upvote);\r\n                if(upvote){\r\n                    setUpvoteCount(upvoteCount+1);\r\n                    setDownvoteCount(downvoteCount-1);\r\n                }else{\r\n                    setUpvoteCount(upvoteCount-1);\r\n                    setDownvoteCount(downvoteCount+1);\r\n                }\r\n                setClicked(null);\r\n            },500)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button\r\n                        title=\"Like\" \r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===true ? \"primary\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(true)}}\r\n                    >\r\n                        {clicked===true?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsUp size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Likes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Likes\"\r\n                    aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={upvoteCount}\r\n                />\r\n            </InputGroup>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button \r\n                        title=\"Dislike\"\r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===false ? \"danger\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(false)}}\r\n                    >\r\n                        {clicked===false?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsDown size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Dislikes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Dislikes\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={downvoteCount}\r\n                />\r\n            </InputGroup>\r\n        </>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport {FaShareAlt} from 'react-icons/fa';\r\nimport {Button,Modal,Container,Row,Col} from 'react-bootstrap';\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    WhatsappShareButton,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    PinterestIcon,\r\n    RedditIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    WhatsappIcon\r\n  } from \"react-share\";\r\n\r\nexport default function Share(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button title=\"Share\" variant=\"secondary\" onClick={handleShow} size=\"sm\" className=\"mr-1 pt-0\">\r\n                <FaShareAlt size=\"1em\"/>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Share</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Share via:\r\n                    <Container className=\"p-3\">\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <EmailShareButton url={props.url} subject={props.title} body={\"Qusol\"}><EmailIcon round/></EmailShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <FacebookShareButton url={props.url} quote={props.title}><FacebookIcon round/></FacebookShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <LinkedinShareButton url={props.url}><LinkedinIcon round/></LinkedinShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <WhatsappShareButton  url={props.url} title={props.title}><WhatsappIcon round/></WhatsappShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <PinterestShareButton url={props.url} title={props.title}><PinterestIcon round/></PinterestShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <RedditShareButton url={props.url} title={props.title}><RedditIcon round/></RedditShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TumblrShareButton  url={props.url} title={props.title}><TumblrIcon round/></TumblrShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TwitterShareButton url={props.url} title={props.title}><TwitterIcon round/></TwitterShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {FaRegEye} from 'react-icons/fa';\r\nimport {Button,InputGroup,FormControl,Col} from 'react-bootstrap';\r\n\r\nexport default function Views(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" as={Col} size=\"sm\">\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Views\"\r\n                    className=\"pt-0\" id=\"basic-addon1\" \r\n                    disabled\r\n                    variant=\"secondary\"\r\n                >\r\n                    <FaRegEye size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Views\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}","import React from 'react';\r\nimport {FaExclamation} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport default function Report() {\r\n    return (\r\n        <Button title=\"Report\" variant=\"secondary\" onClick={()=>{alert(\"Report Clicked!!\")}} size=\"sm\" className=\"pt-0\">\r\n            <FaExclamation size=\"1em\"/>\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Col,Row} from 'react-bootstrap';\r\nimport Vote from './Vote';\r\nimport Share from './Share';\r\nimport Views from './Views';\r\nimport {CommentIcon} from './Comments';\r\nimport Report from './Report';\r\n\r\nexport default function ActionBar(props){\r\n    return (\r\n        <Row className=\"mt-4 justify-content-between flex-nowrap\" noGutters>\r\n            <Col md={9}>\r\n                <Row noGutters>\r\n                    {props.views?<Views count=\"2393\"/>:null}\r\n                    {props.vote?<Vote downvotes={231} upvotes={789}/>:null}\r\n                    {props.comment?<CommentIcon count={290} setOpenCommentInput={props.setOpenCommentInput} OpenCommentInput={props.openCommentInput}/>:null}\r\n                </Row>\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n                <Row className=\"justify-content-end flex-nowrap h-100\" noGutters>\r\n                    {props.share?<Share title={\"Element Title\"} url={\"https://element.url.om/elimentId\"}/>:null}\r\n                    {props.report?<Report/>:null}\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Card} from 'react-bootstrap';\r\nimport AuthorInfo from './AuthorInfo';\r\n\r\nconst EntityHeader = (props) => {\r\n    return  (\r\n        <>\r\n            {props.min?null:<AuthorInfo min author={props.author}/>}\r\n            <Link style={{color:\"black\"}} to={`${props.type}/${props.eid}`}><Card.Title>{props.title}</Card.Title></Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntityHeader;","import React, { useState, createContext } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport {CommentSection,CommentInput} from './Comments';\r\nimport ActionBar from './ActionBar';\r\nimport EntityHeader from './EntityHeader';\r\n\r\nconst VoteContext=createContext({\r\n    voted:null,\r\n    setVoted:()=>{}\r\n});\r\n\r\nconst Entity = (props) => {\r\n    const [openCommentInput, setOpenCommentInput] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [voted,setVoted]=useState(null);//use props false(dislike)  null(not-voted)  true(like)\r\n    const voteValue={voted,setVoted};\r\n    return  (\r\n        <Card bg={props.bg} className={props.className||\"mb-3\"} style={{width:\"100%\"}}>\r\n            <Card.Body className=\"p-2 p-sm-3\">\r\n                {props.type!==\"comment\"?<EntityHeader min type={props.type} eid={props.id} title={props.title}/>:null}\r\n                <AuthorInfo min={props.type==='comment'}/>\r\n                {props.body}\r\n                <VoteContext.Provider value={voteValue}>\r\n                    <ActionBar views={props.type!=='comment'} vote comment share={props.type!=='comment'} report setOpenCommentInput={setOpenCommentInput} OpenCommentInput={openCommentInput} />\r\n                </VoteContext.Provider>\r\n                {openCommentInput?<CommentInput setOpenCommentInput={setOpenCommentInput} comments={comments} \r\n                setComments={setComments}/>:null}\r\n            </Card.Body>\r\n            <CommentSection comments={comments} setComments={setComments} parentType={props.type} parentId={props.id} commentCount={3}/>\r\n        </Card>\r\n    )\r\n}\r\nexport {VoteContext};\r\nexport default Entity;","import React, { useState } from 'react';\r\nimport {ListGroup, Button,Fade} from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [follow, setFollow] = useState(props.following);\r\n    const toggleFollow=()=>{\r\n        setFollow(!follow); \r\n    }\r\n    return(\r\n        <ListGroup.Item\r\n            aria-controls=\"follow-button\"\r\n            onMouseEnter={() => setOpen(true)}\r\n            onMouseLeave={() => setOpen(false)}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <span>\r\n                {props.name}\r\n            </span>\r\n            <Fade in={open}>\r\n                <Button\r\n                    id=\"follow-button\"\r\n                    aria-expanded={open}\r\n                    onClick={toggleFollow}\r\n                    size=\"sm\"\r\n                    variant={follow?\"secondary\":\"primary\"}\r\n                >\r\n                    {follow?\"Unfollow\":\"Follow\"}\r\n                </Button>\r\n            </Fade>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Posts');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/users')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card style={{width:\"100%\",minWidth:\"271px\"}}>\r\n            <Card.Title className=\"pt-2 px-3\">Categories</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} name={obj.name} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React,{useState} from 'react';\r\nimport {Button,Modal,Form, Spinner} from 'react-bootstrap'\r\nimport AuthorInfo from './AuthorInfo';\r\n\r\nexport default function AskQuestion() {\r\n    const [show, setShow] = useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const [question,setQuestion]=useState({});\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button className=\"m-3\" variant=\"primary\" onClick={handleShow}>\r\n            Ask a Question\r\n        </Button>\r\n  \r\n        <Modal\r\n            centered\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Ask a Question</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"px-4\">\r\n                <AuthorInfo min/>\r\n                <Form>\r\n                    <Form.Group controlId=\"AskQuestionForm.ControlTextarea\">\r\n                        <Form.Label>Enter the question you want to ask:</Form.Label>\r\n                        <Form.Control \r\n                            placeholder=\"Enter your Question here\" as=\"textarea\" rows=\"3\"\r\n                            onChange={(e)=>{\r\n                                setQuestion({...question,title:e.target.value});\r\n                            }} />\r\n                        <Form.Text id=\"QuestionHelpBlock\" muted>\r\n                            Make sure the question you are going to ask is not already asked by someone else. We recommend searching before asking a new question.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick={()=>{\r\n                        setLoading(true);\r\n                        setTimeout(()=>{\r\n                            setLoading(false);\r\n                            handleClose()\r\n                        },500)\r\n                    }}\r\n                >\r\n                    Ask\r\n                    {loading?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:null}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}","import React from 'react';\r\nimport Entity from './Entity';\r\nimport CategoriesPanel from './Categories';\r\nimport AskQuestion from './AskQuestion';\r\nimport {Container,Col,Row} from 'react-bootstrap';\r\n\r\nexport default function Home(props) {\r\n    // const [posts,setPosts]=useState([]);\r\n    // useEffect(()=>{\r\n    //     (async ()=>{\r\n    //       console.log('Fetching Posts');\r\n    //       setPosts((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\r\n    //     })()\r\n    // },[]);\r\n    return (\r\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\r\n          <Row>\r\n            <Col xs={\"auto\"} className=\"d-none d-lg-block p-0\">\r\n              <CategoriesPanel/>\r\n            </Col>\r\n            <Col className=\"p-0 px-sm-2 px-md-3\">\r\n              <Row>\r\n                <AskQuestion/>\r\n              </Row>\r\n              <Row>\r\n                {props.posts.map((obj)=><Entity key={obj.id} id={obj.id} type=\"question\" title={obj.title} body={obj.body} userId={obj.userId}/>)}\r\n              </Row>\r\n            </Col>\r\n            <Col xs={\"auto\"} className=\"d-none d-xl-block p-0\">\r\n              <CategoriesPanel/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }","import React from 'react';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    return(\r\n        <ListGroup.Item\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <Link to={\"question/\"+props.id}>\r\n                {props.name}\r\n            </Link>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Suggestions');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card style={{width:\"100%\",minWidth:\"271px\"}}>\r\n            <Card.Title className=\"pt-2 px-3\">Related Questions</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} id={obj.id} name={obj.title} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React, {useState, useRef} from 'react';\r\nimport JoditEditor from \"jodit-react\";\r\n\r\nconst Editor =(props) => {\r\n\tconst editor = useRef(null)\r\n    const [content, setContent] = useState('')\r\n    \r\n\tconst config = {\r\n        showWordsCounter: false,\r\n        showXPathInStatusbar: false,\r\n        uploader: { insertImageAsBase64URI: true },\r\n        buttons: \"bold,strikethrough,underline,italic,eraser,|,superscript,subscript,|,ul,ol,|,outdent,indent,|,font,fontsize,brush,paragraph,|,image,video,table,link,|,align,undo,redo,\\n,selectall,cut,copy,paste,copyformat,|,hr,symbol,fullsize\"\r\n    }\r\n    const handleChange=(value)=>{\r\n        props.setAnswer({...props.answer,body:value});\r\n    }\r\n\treturn(<JoditEditor\r\n            ref={editor}\r\n            content={content}\r\n            config={config}\r\n            tabIndex={1} // tabIndex of textarea\r\n            onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}\r\nexport default Editor;","import React,{useState} from 'react';\r\nimport {Button,Modal,Form, Spinner} from 'react-bootstrap'\r\nimport AuthorInfo from './AuthorInfo';\r\nimport Editor from './Editor';\r\n\r\nexport default function WriteAnswer(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const [answer,setAnswer]=useState({});\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button className=\"m-3\" variant=\"primary\" onClick={handleShow}>\r\n            Write Answer\r\n        </Button>\r\n  \r\n        <Modal\r\n            centered\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Write Answer for: {props.questionTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"px-4\">\r\n                <AuthorInfo/>\r\n                <Form>\r\n                    <Form.Group controlId=\"AnswerForm.ControlTextarea\">\r\n                        <Form.Label>Enter your answer</Form.Label>\r\n                        <Editor\r\n                            placeholder=\"Enter your Question here\" rows=\"3\"\r\n                            setAnswer={setAnswer}\r\n                            answer={answer} />\r\n                        <Form.Text id=\"QuestionHelpBlock\" muted>\r\n                            Make your submission awesome\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick={()=>{\r\n                        setLoading(true);\r\n                        setTimeout(()=>{\r\n                            handleClose();\r\n                            props.setAnswers([answer,...props.answers]);\r\n                            setLoading(false);\r\n                        },500)\r\n                    }}\r\n                >\r\n                    Submit Answer \r\n                    {loading?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:null}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport SuggestionsPanel from './Suggestions';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport Entity from './Entity';\r\nimport {Container,Col,Row} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport WriteAnswer from './WriteAnswer';\r\n\r\nexport default function QuestionPage(props) {\r\n    const [answers,setAnswers]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Answers');\r\n          setAnswers((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\r\n          <Row>\r\n            <Col className=\"p-0 px-sm-2 px-md-3\">\r\n                <AuthorInfo min/>\r\n                <h3>Here comes our question</h3>\r\n                <p className=\"text-muted\">Some stuff about question<br/>Some more stuff about question</p>\r\n                <br/>\r\n                <WriteAnswer answers={answers} setAnswers={setAnswers}/>\r\n                <br/>\r\n                {answers.map((obj,key)=><Entity key={key} id={obj.id} type=\"answer\" body={ReactHtmlParser(obj.body)} userId={obj.userId}/>)}\r\n            </Col>\r\n            <Col xs={4} className=\"d-none d-md-block p-0\">\r\n              <SuggestionsPanel/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n}","import React,{useState, useEffect} from 'react';\nimport { IconContext } from \"react-icons\";\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport axios from 'axios';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport QuestionPage from './components/QuestionPage';\n\nfunction App() {\n  const [posts,setPosts]=useState([]);\n  useEffect(()=>{\n      (async ()=>{\n        console.log('Fetching Posts');\n        setPosts((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\n      })()\n  },[]);\n  return (\n    <Router>\n    <IconContext.Provider value={{ size:\"1.5em\"}}>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home posts={posts}/>\n          </Route>\n          <Route path=\"/question/:id\" exact>\n            <QuestionPage/>\n          </Route>\n        </Switch>\n      </div>\n    </IconContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/userThumb.35d08c44.jpeg\";"],"sourceRoot":""}